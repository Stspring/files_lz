#нужен для подсчета частоты элементов
from collections import Counter

#нужен для работы с текстом в формате docx
import docx

#инструмент для обработки текста(в этой программе он нужен для извлечения слов из текста и извлечения букв)
import re 

#библиотека для работы с таблицами и анализа данных.
import pandas as pd

#нужна для построения графика
import matplotlib.pyplot as plt

#указываем путь к файлу из которого будем брать текст
file_path = 'lion.docx'

#открываем документ
doc = docx.Document(file_path)

#создаю пустой список(в нем будут храниться извлеченные абзатцы)
text = []

#проходим по каждому абзатцу и извлекаем из них текст в список
for paragraph in doc.paragraphs:
    text.append(paragraph.text)

#объединяем все элементы с списка в одну строку(элементы разделены пробелами)
full_text = ' '.join(text)

#удаляем знаки препинания и разбиваем текст на слова
#/указывает на границу слова
#\w+ находит последовательности букв
#lower нужен для того чтобы слова с разным регистром считались одинаковыми
words = re.findall(r'\b\w+\b', full_text.lower())

#подсчитываем частоту каждого слова с помощью Counter
word_count = Counter(words)

#находим общее количество слов(суммируются все значения в word_count)
total_words = sum(word_count.values())

#создаем DataFrame из слов и их частот(2 столбца слово и частота)
df_words = pd.DataFrame(word_count.items(), columns=['Слово', 'Частота'])

#добавляем в таблицу столбец процент (рассчитываем процент встречаемости слов)
df_words['Процент'] = (df_words['Частота'] / total_words) * 100

#вывожу таблицу на экран
print(df_words)

#сохраняем результат в CSV файл 
output_file_words = 'word_frequency.csv'
df_words.to_csv(output_file_words, index=False, encoding='utf-8')

# вывожу сообщение о успешном сохранении в файл
print(f'Результаты частоты слов сохранены в файл: {output_file_words}')

#удаляются все буквы(кроме русских), затем они извлекаюся из текста
#(извлекаются все от а до я(в том числе и заглавные)и буквы ёЁ)
letters = re.findall(r'[а-яА-ЯёЁ]', full_text.lower())

#подсчитываем частоту встречаемости каждой буквы
letter_count = Counter(letters)

#создаем DataFrame (для подсчета букв(2 столбца букваи и частота))
df_letters = pd.DataFrame(letter_count.items(), columns=['Буква', 'Частота'])

#вычисляем общее количество букв
#добавляю столбец процент (рассчитываем процент встречаемости слов)
total_letters = sum(letter_count.values())
df_letters['Процент'] = (df_letters['Частота'] / total_letters) * 100

plt.bar(df_letters['Буква'], df_letters['Частота'], color='orange')     #создаю стобчатую диаграмму(с частотой букв)                                        
plt.title('Частота встречаемости букв')      #заголовок гистограммы
plt.xlabel('Буквы')                          #подпись к оси
plt.ylabel('Частота')                        #подпись к оси
plt.xticks(rotation=45)                      #угол поворта подписи
plt.grid(axis='y')                           #включаю сетку по оси У(упрощает оценку гистограммы)

#отображаем гистограмму для букв
plt.tight_layout()     #команда помогает избежать наложения элементов друг на друга
plt.show()             # отображает гистограмму на экран